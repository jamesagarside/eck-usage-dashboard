# Namespaces for organization - Create these first
apiVersion: v1
kind: Namespace
metadata:
  name: production
---
apiVersion: v1
kind: Namespace
metadata:
  name: development
---
# Test Elasticsearch clusters with different configurations
apiVersion: elasticsearch.k8s.elastic.co/v1
kind: Elasticsearch
metadata:
  name: quickstart
  namespace: default
spec:
  version: 8.11.0
  nodeSets:
  - name: default
    count: 1
    config:
      node.store.allow_mmap: false
    podTemplate:
      spec:
        containers:
        - name: elasticsearch
          resources:
            requests:
              memory: 1Gi
              cpu: 0.5
            limits:
              memory: 1Gi
              cpu: 0.5
---
apiVersion: elasticsearch.k8s.elastic.co/v1
kind: Elasticsearch
metadata:
  name: production-cluster
  namespace: production
spec:
  version: 8.19.0
  nodeSets:
  - name: master
    count: 1
    config:
      node.roles: ["master"]
      node.store.allow_mmap: false
    podTemplate:
      spec:
        containers:
        - name: elasticsearch
          resources:
            requests:
              memory: 1Gi
              cpu: 0.5
            limits:
              memory: 1Gi
              cpu: 0.5
  - name: data
    count: 1
    config:
      node.roles: ["data", "ingest"]
      node.store.allow_mmap: false
    podTemplate:
      spec:
        containers:
        - name: elasticsearch
          resources:
            requests:
              memory: 1Gi
              cpu: 0.5
            limits:
              memory: 1Gi
              cpu: 0.5
---
# Test Kibana instances
apiVersion: kibana.k8s.elastic.co/v1
kind: Kibana
metadata:
  name: quickstart
  namespace: default
spec:
  version: 8.11.0
  count: 1
  elasticsearchRef:
    name: quickstart
  podTemplate:
    spec:
      containers:
      - name: kibana
        resources:
          requests:
            memory: 512Mi
            cpu: 0.5
          limits:
            memory: 512Mi
            cpu: 0.5
---
apiVersion: kibana.k8s.elastic.co/v1
kind: Kibana
metadata:
  name: production-kibana
  namespace: production
spec:
  version: 8.19.0
  count: 1
  elasticsearchRef:
    name: production-cluster
  podTemplate:
    spec:
      containers:
      - name: kibana
        resources:
          requests:
            memory: 512Mi
            cpu: 0.5
          limits:
            memory: 512Mi
            cpu: 0.5
---
# Test APM Server instances
apiVersion: apm.k8s.elastic.co/v1
kind: ApmServer
metadata:
  name: quickstart-apm
  namespace: default
spec:
  version: 8.11.0
  count: 1
  elasticsearchRef:
    name: quickstart
  podTemplate:
    spec:
      containers:
      - name: apm-server
        resources:
          requests:
            memory: 512Mi
            cpu: 0.25
          limits:
            memory: 1Gi
            cpu: 0.5
---
apiVersion: apm.k8s.elastic.co/v1
kind: ApmServer
metadata:
  name: production-apm
  namespace: production
spec:
  version: 8.19.0
  count: 1
  elasticsearchRef:
    name: production-cluster
  podTemplate:
    spec:
      containers:
      - name: apm-server
        resources:
          requests:
            memory: 512Mi
            cpu: 0.25
          limits:
            memory: 1Gi
            cpu: 0.5
---
# Test Enterprise Search instances
apiVersion: enterprisesearch.k8s.elastic.co/v1
kind: EnterpriseSearch
metadata:
  name: enterprise-search-quickstart
  namespace: default
spec:
  version: 8.11.0
  count: 1
  elasticsearchRef:
    name: quickstart
  podTemplate:
    spec:
      containers:
      - name: enterprise-search
        resources:
          requests:
            memory: 512Mi
            cpu: 0.25
          limits:
            memory: 1Gi
            cpu: 0.5
---
apiVersion: enterprisesearch.k8s.elastic.co/v1
kind: EnterpriseSearch
metadata:
  name: production-enterprise-search
  namespace: production
spec:
  version: 8.19.0
  count: 1
  elasticsearchRef:
    name: production-cluster
  podTemplate:
    spec:
      containers:
      - name: enterprise-search
        resources:
          requests:
            memory: 1Gi
            cpu: 0.5
          limits:
            memory: 1Gi
            cpu: 0.5
---
# Test Logstash instances
apiVersion: logstash.k8s.elastic.co/v1alpha1
kind: Logstash
metadata:
  name: quickstart-logstash
  namespace: default
spec:
  version: 8.15.0
  count: 1
  elasticsearchRefs:
  - name: quickstart
    clusterName: qs
  pipelines:
  - pipeline.id: main
    config.string: |
      input {
        beats {
          port => 5044
        }
      }
      output {
        elasticsearch {
          hosts => ["${QS_ES_HOSTS}"]
          user => "${QS_ES_USER}"
          password => "${QS_ES_PASSWORD}"
          ssl_certificate_authorities => "${QS_ES_SSL_CERTIFICATE_AUTHORITY}"
        }
      }
  podTemplate:
    spec:
      containers:
      - name: logstash
        resources:
          requests:
            memory: 1Gi
            cpu: 0.5
          limits:
            memory: 1Gi
            cpu: 0.5
---
apiVersion: logstash.k8s.elastic.co/v1alpha1
kind: Logstash
metadata:
  name: production-logstash
  namespace: production
spec:
  version: 8.19.0
  count: 1
  elasticsearchRefs:
  - name: production-cluster
    clusterName: prod
  pipelines:
  - pipeline.id: main
    config.string: |
      input {
        beats {
          port => 5044
        }
      }
      filter {
        grok {
          match => { "message" => "%{COMBINEDAPACHELOG}" }
        }
        date {
          match => [ "timestamp" , "dd/MMM/yyyy:HH:mm:ss Z" ]
        }
      }
      output {
        elasticsearch {
          hosts => ["${PROD_ES_HOSTS}"]
          user => "${PROD_ES_USER}"
          password => "${PROD_ES_PASSWORD}"
          ssl_certificate_authorities => "${PROD_ES_SSL_CERTIFICATE_AUTHORITY}"
          index => "logstash-apache-%{+YYYY.MM.dd}"
        }
      }
  podTemplate:
    spec:
      containers:
      - name: logstash
        resources:
          requests:
            memory: 1Gi
            cpu: 0.5
          limits:
            memory: 1Gi
            cpu: 0.5
---
# Additional small test cluster for development
apiVersion: elasticsearch.k8s.elastic.co/v1
kind: Elasticsearch
metadata:
  name: dev-cluster
  namespace: development
spec:
  version: 9.1.0
  nodeSets:
  - name: default
    count: 1
    config:
      node.store.allow_mmap: false
    podTemplate:
      spec:
        containers:
        - name: elasticsearch
          resources:
            requests:
              memory: 1Gi
              cpu: 0.5
            limits:
              memory: 1Gi
              cpu: 1
---
apiVersion: kibana.k8s.elastic.co/v1
kind: Kibana
metadata:
  name: dev-kibana
  namespace: development
spec:
  version: 9.1.0
  count: 1
  elasticsearchRef:
    name: dev-cluster
  podTemplate:
    spec:
      containers:
      - name: kibana
        resources:
          requests:
            memory: 512Mi
            cpu: 0.25
          limits:
            memory: 1Gi
            cpu: 0.5
---
# Test Elastic Agent instances
apiVersion: agent.k8s.elastic.co/v1alpha1
kind: Agent
metadata:
  name: quickstart-agent
  namespace: default
spec:
  version: 8.15.0
  elasticsearchRefs:
  - name: quickstart
  kibanaRef:
    name: quickstart
  fleetServerEnabled: true
  mode: fleet
  deployment:
    replicas: 1
    podTemplate:
      spec:
        containers:
        - name: agent
          resources:
            requests:
              memory: 512Mi
              cpu: 0.25
            limits:
              memory: 1Gi
              cpu: 0.5
---
apiVersion: agent.k8s.elastic.co/v1alpha1
kind: Agent
metadata:
  name: production-agent
  namespace: production
spec:
  version: 8.19.0
  elasticsearchRefs:
  - name: production-cluster
  kibanaRef:
    name: production-kibana
  fleetServerEnabled: false
  mode: fleet
  policyID: "eck-fleet-policy"
  daemonSet:
    podTemplate:
      spec:
        containers:
        - name: agent
          resources:
            requests:
              memory: 1Gi
              cpu: 0.5
            limits:
              memory: 2Gi
              cpu: 1
---
apiVersion: agent.k8s.elastic.co/v1alpha1
kind: Agent
metadata:
  name: dev-agent
  namespace: development
spec:
  version: 9.1.0
  elasticsearchRefs:
  - name: dev-cluster
  kibanaRef:
    name: dev-kibana
  fleetServerEnabled: false
  mode: fleet
  deployment:
    replicas: 1
    podTemplate:
      spec:
        containers:
        - name: agent
          resources:
            requests:
              memory: 256Mi
              cpu: 0.1
            limits:
              memory: 512Mi
              cpu: 0.25